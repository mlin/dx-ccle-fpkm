#!/bin/bash
# genetorrent_builder 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Building GeneTorrent ${version}"

    apt-get install -y --force-yes \
        wget g++ pkg-config libboost1.48-dev libboost-filesystem1.48-dev \
        libboost-program-options1.48-dev libboost-regex1.48-dev \
        libboost-system1.48-dev libboost-thread1.48-dev libxerces-c-dev \
        libcurl4-openssl-dev libxqilla-dev libssl-dev make devscripts \
        debhelper python-support

    wget https://cghub.ucsc.edu/software/downloads/GeneTorrent/${version}/src/GeneTorrent-${version}.tar.gz

    tar zxf GeneTorrent-${version}.tar.gz
    cd GeneTorrent-${version}
    ./configure
    make deb

    find . -type f

    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    common_deb=$(dx upload genetorrent-common_${version}-ubuntu1-12.04_amd64.deb --brief)
    upload_deb=$(dx upload genetorrent-upload_${version}-ubuntu1-12.04_amd64.deb --brief)
    download_deb=$(dx upload genetorrent-download_${version}-ubuntu1-12.04_amd64.deb --brief)
    dx-jobutil-add-output package "$common_deb" --class=array:file
    dx-jobutil-add-output package "$upload_deb" --class=array:file
    dx-jobutil-add-output package "$download_deb" --class=array:file
}
